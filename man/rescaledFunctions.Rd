% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rescalatedFunctions.R
\name{rescaledFunctions}
\alias{rescaledFunctions}
\alias{rescaledMoTBFs}
\alias{rescaledMOP}
\alias{ToStringRe_MOP}
\alias{rescaledMTE}
\alias{ToStringRe_MTE}
\alias{meanMOP}
\title{Rescaling MoTBF functions}
\usage{
rescaledMoTBFs(fx, data)

rescaledMOP(fx, data)

ToStringRe_MOP(parameters, data)

rescaledMTE(fx, data)

ToStringRe_MTE(parameters, data, num = 5)

meanMOP(fx)
}
\arguments{
\item{fx}{A function of class \code{"motbf"} learned from a scaled data.}

\item{data}{A \code{"numeric"} vector containing the original data (non standardizded).}

\item{parameters}{A \code{"numeric"} vector with the coefficients to create the rescaled MoTBF.}

\item{num}{A \code{"numeric"} value which contains the denominator of the coefficient
in the exponential. By default it is 5.}
}
\value{
An \code{"motbf"} function of the original data.
}
\description{
A collation of function to reescale an MoTBF function
to the original offset and scale. This is useful when data was
standardized previously to learning.
}
\examples{
## 1. EXAMPLE
X <- rchisq(1000, df = 8) ## data
modX <- scale(X) ## scale data

## Learning
f <- univMoTBF(modX, POTENTIAL_TYPE = "MOP", nparam=10) 
plot(f, xlim = range(modX), col=2)
hist(modX, prob = TRUE, add = TRUE)

## Rescale
origF <- rescaledMoTBFs(f, X) 
plot(origF, xlim = range(X), col=2)
hist(X, prob = TRUE, add = TRUE)
meanMOP(origF) 
mean(X)

## 2. EXAMPLE 
X <- rweibull(1000, shape = 20, scale= 10) ## data
modX <- as.numeric(scale(X)) ## scale data

## Learning
f <- univMoTBF(modX, POTENTIAL_TYPE = "MTE", nparam = 9) 
plot(f, xlim = range(modX), col=2, main="")
hist(modX, prob = TRUE, add = TRUE)

## Rescale
origF <- rescaledMoTBFs(f, X) 
plot(origF, xlim = range(X), col=2)
hist(X, prob = TRUE, add = TRUE)

}
\seealso{
\link{univMoTBF}
}
